@model HigherEducation.Models.ChoiceofCourseViewModel
@{
    Session["currentPage"] = 5;
}
@{
    if (Session["MaxPage"] == null)
    {
        Session["currentPage"] = 1;
        Session["MaxPage"] = 1;
    }
    else if (Convert.ToInt32(Session["currentPage"]) > Convert.ToInt32(Session["MaxPage"]))
    {
        Session["MaxPage"] = Session["currentPage"];
    }

}
<style type="text/css">
    .ui-datepicker select.ui-datepicker-month, .ui-datepicker select.ui-datepicker-year {
        color: black;
        font-size: 12px;
        font-weight: bold;
    }

    .tab-pane .tools .btn.btn-flat {
        /* padding: 4.5px 7px; */
        margin-bottom: 5px;
        margin-top: -30px;
        margin-right: 10px;
    }

    .txtSize {
        font-size: 16px;
    }

    .ctrlPosition {
        text-align: center;
        margin-top: 40px;
        color: #34495E;
        font-weight: bold;
    }

        .ctrlPosition:hover {
            color: blue;
        }

    .pdfFile {
        margin-left: 50px;
        color: #007bff;
        font-weight: bold;
    }

        .pdfFile:hover {
            text-decoration: underline;
        }

    .btnAdd {
        color: white;
        outline: 0;
        padding: 10px 16px;
        font-size: 16px;
        line-height: 1.33;
        border-radius: 6px;
    }

    .my-input {
        width: 100%;
    }

    .my-icon {
        position: absolute;
        right: 20px;
        color: red;
        top: 7px;
        font-size: 20px;
        font-weight: bold;
    }

    .redBorder {
        border: 1px solid red !important;
    }

    .greenBorder {
        border: 1px solid green !important;
    }

    .nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link.active {
        background: linear-gradient(to right, #004ef9, #79a3ff) !important;
        color: #fff;
        border-color: #79a3ff !important;
    }

    .disabledbutton {
        pointer-events: none;
        /*opacity: 0.4;*/
    }
</style>
<style>
    .loader,
    .outer-loader {
        display: inline-block;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0
    }

    .outer-loader {
        background: rgba(0, 0, 0, .3);
        width: 100%;
        height: 100%;
        z-index: 999
    }

    .loader {
        width: 69px;
        height: 89px;
        border: 1px solid #000;
        margin: auto
    }

    .loader-img {
        border: 15px solid #415bbb;
        border-radius: 50%;
        border-top: 15px solid #000;
        width: 80px;
        height: 80px;
        -webkit-animation: spin 1s linear infinite;
        animation: spin 1s linear infinite
    }

    @@-webkit-keyframes spin {
        0% {
            -webkit-transform: rotate(0)
        }

        100% {
            -webkit-transform: rotate(360deg)
        }
    }

    @@keyframes spin {
        0% {
            transform: rotate(0)
        }

        100% {
            transform: rotate(360deg)
        }
    }

    .row_new {
        margin-left: 10px;
        margin-right: 10px
    }

    #logo img {
        height: auto;
        padding-left: 3px;
        width: 40px
    }

    body:not(.menu-on-top).desktop-detected {
        min-height: 907px !important
    }
</style>
<head>

    @*<link href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css" rel="stylesheet">*@
    @*<link rel="stylesheet" href="http://code.jquery.com/ui/1.9.1/themes/base/jquery-ui.css" />*@
    <script type="text/javascript" src="~/assets/js/jquery/jquery.min.js"></script>
    <link href="~/assets/css/stylecommon.css" rel="stylesheet" />
    <link href="~/swalJs/sweetalert.css" rel="stylesheet" />
    <link href="~/swalJs/swal-forms.css" rel="stylesheet" />
    <script src="~/swalJs/sweetalert.min.js"></script>
    <script src="~/swalJs/swal-forms.js"></script>

    @if (Convert.ToInt32(TempData["SuccessFileUpload"]) == 1)
    {
        <script>
            swal("Success!", "Document Uploaded Successfully.", "success");
        </script>
    }

</head>
<section class="cus-background" style="margin-bottom:4%;">
    <div class="section-body contain-lg">
        <div class="col-lg-12 col-md-12 cus-heading">
            <h3>Choice of Trades </h3>
        </div>

        <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="Case Details-tab">
            <div class="card c-shadow" style="margin-bottom:2%;">
                <span style="color:#f70a0a; font-weight: bold; text-align: center; margin-bottom: 0px; margin-top: 7px;"><b>Note: </b> Only those Institutes/Trades are visible to the student in which he/she is eligible according to the Gender and Stream choosen in qualifying exam.</span>
                <span style="color:#f70a0a; font-weight: bold; text-align: center; margin-bottom: 0px; margin-top: 7px;"><b>Note: </b> The applicants are required to choose maximum number of choices (upto 15) in order to maximize their chance of getting admission.</span>

                <div class="card-body">
                    <div class="top-section">
                        <div class="row">
                            <div class="col-md-4 form-group">
                                <label for="District" style="font-size:16px;color: #34495E;">जिला&nbsp;(District) <span style="color:red; display: inline;"><strong>*</strong></span></label>
                                @Html.DropDownListFor(model => model.Course_District, Enumerable.Empty<SelectListItem>(), new { @class = "form-control input-shadow", @required = "required" })
                            </div>
                            <div class="col-md-4 form-group">
                                <label for="Course_Type" style="font-size:16px;color: #34495E;">आईटीआई प्रकार&nbsp;(ITI Type) <span style="color:red; display: inline;"><strong>*</strong></span></label>
                                @Html.DropDownListFor(model => model.Course_Type, new List<SelectListItem>{
                                    new SelectListItem { Text = "Select", Value = "" },
                                                 new SelectListItem { Text = "Govt", Value = "1" },
                                                 new SelectListItem { Text = "Private", Value = "3" },
                                                 new SelectListItem { Text = "Both", Value = "0" },}, new { @class = "form-control input-shadow", @required = "required" })
                            </div>

                            <div class="col-md-4 form-group">
                                <label for="College" style="font-size:16px;color: #34495E;">आईटीआई&nbsp;(ITI) <span style="color:red;  display: inline;"><strong>*</strong></span></label>
                                @Html.DropDownListFor(m => m.Course_College, Enumerable.Empty<SelectListItem>(), new { @class = "form-control input-shadow", @required = "required" })
                            </div>
                            <div class="col-md-4 form-group">
                                <label for="Course_Course" style="font-size:16px;color: #34495E;">आईटीआई ट्रेड&nbsp;(ITI Trade) <span style="color:red; display: inline;"><strong>*</strong></span></label>
                                @Html.DropDownListFor(model => model.Course_Course, Enumerable.Empty<SelectListItem>(), new { @class = "form-control input-shadow", @required = "required" })

                            </div>
                            <div class="col-md-4 form-group">
                                <label for="CourseSection" style="font-size:16px;color: #34495E;">ट्रेड अनुभाग&nbsp;(ट्रेड Section) <span style="color: red; display: inline;"><strong>*</strong></span></label>
                                @Html.DropDownListFor(m => m.Course_CourseSection, Enumerable.Empty<SelectListItem>(), new { @class = "form-control input-shadow", @required = "required" })
                            </div>
                            @if ( Session["Verificationstatus"].ToString() == "" || Session["Verificationstatus"].ToString() == "R")
                            {
                                <div class="col-md-4 form-group" style="margin-top:28px;">
                                    <label for="CourseSection" style="font-size:16px;color: #34495E;"></label>
                                    <button type="button" id="btnAddList" class="btn btn-success"><i class="fa fa-plus"></i>Add to List</button>
                                </div>
                            }
                            <div class="col-md-12 form-group text-center" style="color:red ; font-weight:800">
                                यदि आपने अपना विकल्प बदल दिया है तो कृपया चरण 6 में विकल्पों को लॉक करें|
                            </div>
                        </div>
                    </div>

                </div>
                <div class="card c-shadow">

                    <div class="card-body">
                        <div class="top-section">
                            <div class="table-responsive">
                                <table id="tblCourseSection" class="table table-striped table-bordered table-hover">
                                    <thead>
                                        <tr>
                                            <th>Sr. No.</th>
                                            <th>District</th>
                                            <th>ITI</th>
                                            <th>Trade</th>
                                            <th>Trade Section</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                @if ( Session["Verificationstatus"].ToString() == "" || Session["Verificationstatus"].ToString() == "R")

                {
                    <div class="row">
                        <div class="col-md-12 form-group cus-registerbtn" style="text-align:right;margin-top:-30px;">
                            <button type="button" id="btnChoices" onclick="clicktoMove();" class="btn btn-primary c-shadow-1"><i class="fa fa-angle-double-right"></i>Save & Next</button>
                        </div>
                    </div>
                }




            </div>
        </div>
        <div class="outer-loader" style="display: none;">
            <div class="loader-img loader" style="display: none;"></div>
        </div>
</section>
<script language="javascript" type="text/javascript">
    function noBack() { window.history.forward() }
    noBack();
    window.onload = noBack;
    window.onpageshow = function (evt) { if (evt.persisted) noBack() }
    window.onunload = function () { void (0) }
</script>
<script type="text/javascript" language="Javascript">
    history.go(1);
</script>
<script type="text/javascript">

    $(document).ready(function () {
        var MaxPages = '@Session["MaxPage"]';
        var currentPage = '@Session["currentPage"]';
        for (var i = 0; i < parseInt(MaxPages) ; i++) {
            if ((i+1) != currentPage) $("#tablist > li:eq(" + i + ")").addClass('done');
            else $("#tablist > li:eq(" + i + ")").addClass('current');
        }
        for (i = 8; i > MaxPages; i--) {
            $("#tablist > li:eq(" + (i - 1) + ")>a").attr("href", "#");
        }

        var Sessiondescription = '@Session["RegId"].ToString()';

        if (Sessiondescription != null)
        {
            $.get("District_Bind", function (data) {
                        $("#Course_District").empty();
                        $('#Course_District').append($("<option></option>").val(0).html('Select District'));
                $.each(data, function (i, v1) {
                      $('#Course_District').append($("<option></option>").val(v1.Value).html(v1.Text));

                });
            });
            getCourseSectionData();
        }

        // disable enter as submit button
        $(window).keydown(function (event) {
            if (event.keyCode == 13) {
                event.preventDefault();
                return false;
            }
        });
    })
    function clicktoMove() {
if ($("#tblCourseSection > tbody").children().length == 0)
        {
            alert('Please add atleast one choice and then proceed');
            return false;
        }
        window.location.href = '@Url.Action("lockPref", "Account")';
    }



    $("#Course_Type").change(function () {
        var v = $("#Course_District").val();
        var id = $(this).val();
        if (v == null || v == "") {
            alert('Please select district first.');
            return;
        }
        if (id == null || id == "") {
            return;
        }

       startPreloader();

	var a = '@ViewBag.passstatus'=='Pass'?1:'@ViewBag.passstatus'=='Reappear'?2:'@ViewBag.passstatus';
        $("#Course_Type").removeClass("redBorder");

        $("#Course_College").empty();
        $('#Course_College').append($("<option></option>").val(0).html('Select College'));
        $.ajax({
                type: "GET",
                url: '@Url.Action("College_Bind", "Account")',
            data: { courseDistrictId: v, passstatus: a, collagetype: id},
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    //var v;
                    $.each(data, function (i, v1) {
                      $('#Course_College').append($("<option></option>").val(v1.Value).html(v1.Text));
                    });
                    stopPreloader();
                },
                failure: function (data) {
                    swal('Error', 'Something went wrong', 'error');
                }

            });
    });

    $("#Course_District").change(function () {
        $("#Course_District").removeClass("redBorder");
        $("#Course_Type").val("");
    });


    $("#Course_College").change(function () {
        var id = $(this).val();


        $("#Course_Course").empty();
        $('#Course_Course').append($("<option></option>").val(0).html('Select Course'));

        $.get("Course_Bind", { coursecollegeid: id }, function (data) {

            $.each(data, function (i, v1) {

                $('#Course_Course').append($("<option></option>").val(v1.Value).html(v1.Text));

            });
        });
    });
    $("#Course_Course").change(function () {
        var id = $(this).val();

        @*if (id == "49" && '@ViewBag.gender' == "1") {
            swal("Alert!", "Male candidate can not choose Home Science", "warning");
            $("#Course_CourseSection").empty();
            $("#Course_SubjectCombination").empty();
            return;
        }*@
        var collegeid = $('#Course_College').val();
        $("#Course_CourseSection").empty();
        $('#Course_CourseSection').append($("<option></option>").val(0).html('Select Course Section'));

        $.get("CourseSection_Bind", { coursecourseid: id, collegeid: collegeid }, function (data) {

            $.each(data, function (i, v1) {
                $('#Course_CourseSection').append($("<option></option>").val(v1.Value).html(v1.Text));
            });
        });
    });
// $("#Course_CourseSection").change(function () {
//        var id = $(this).val();
//        var sectionName = $(this).find("option:selected").text();
//        var collegeid = $("#Course_College").val();
//     $("#Course_SubjectCombination").empty();
//        $('#Course_SubjectCombination').append($("<option></option>").val(0).html('Select Subject Combination'));

//        $.get("Subject_Bind", { sectionid: id, courseid: collegeid }, function (data) {
//            $.each(data, function (i, v1) {
//                $('#Course_SubjectCombination').append($("<option></option>").val(v1.Value).html(v1.Text));

//            });
//if (data.length == 0)
//            {
//    $("#Course_SubjectCombination").attr('disabled', 'disabled');
//         $("#Course_SubjectCombination").empty();
//        $('#Course_SubjectCombination').append($("<option></option>").val(0).html('No Subject Combination Exists!'));
//            }
//            else
//            {
//   $("#Course_SubjectCombination").removeAttr('disabled');//, 'disabled');
//            }
//            //$("#Course_SubjectCombination").html(v);
//        });
//    });
    $(document).on("click", "#btnAddList", function () {

        var state = '6';//$("#Course_State").val();
        var district = $("#Course_District").val();
        var college = $("#Course_College").val();
        var Course = $("#Course_Course").val();
        var Section = $("#Course_CourseSection").val();
        //var combination = $("#Course_SubjectCombination").val();
        //var subjectcombinationlength =$("#Course_SubjectCombination option").length;


        if (state == "") {
            swal("Alert!", "Please select state!", "warning")
            $("#Course_State").addClass("redBorder");
        }
        else if (district == "Select" || district==null || district=="") {
            swal("Alert!", "Please select district!", "warning")
            $("#Course_District").addClass("redBorder");
        }
        else if (college == "0" || college==null || college=="") {
            swal("Alert!", "Please select College!", "warning")
            $("#Course_College").addClass("redBorder");
        }
        else if (Course == "0" || Course==null || Course=="") {
            swal("Alert!", "Please select Course!", "warning")
            $("#Course_Course").addClass("redBorder");
        }
         else if (Section == "0" || Section==null || Section=="") {
            swal("Alert!", "Please select Section!", "warning")
            $("#Course_CourseSection").addClass("redBorder");
        }
        //else if (combination == "0" || combination==null || combination=="") {

        //    swal("Alert!", "Please select Subject Combination!", "warning")
        //    $("#Course_SubjectCombination").addClass("redBorder");
        //}

        else {
            startPreloader();
            var CourseModel = {};
            CourseModel.Course_State =  '6';
            CourseModel.Course_District = $("#Course_District").val();
            CourseModel.Course_College = $("#Course_College").val();
            CourseModel.Course_CollegeCourse = $("#Course_Course").val();
            CourseModel.Course_CourseSection = $("#Course_CourseSection").val();
            CourseModel.Course_SubjectCombination = '';

            $.ajax({
                type: "POST",
                url: "@Url.Action("SaveCourseSection", "Account")",
                data: '{CourseModel:' + JSON.stringify(CourseModel) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                stopPreloader();

                    if (data == "Kindly try again, there is some error!!") {
                        swal("Error!","Please try again, there is some error!!","error");
                    }
                    else if (data == "You Course Combination  Selecion Limit Exceed!")
                    {

                        swal("OOPS!", "You can select maximum 5 choice per college!", "warning")
                    }
                  else if (data == "3")
                    {
                        swal("OOPS!", "You can select maximum 15 courses!", "warning")
                    }
                    else if (data == "4")
                    {
                        swal("OOPS!", "Course/Subject Combination can not be duplicate!", "warning")
                    }
                    else if (data == "9")
                    {
                        swal("Alert!", "Please select all fields.", "warning")
                    }
                    else if (data == "6") {
                        swal("Alert!", "Course Already exist.", "warning")
                    }
                    else {
                        swal("Nice!", "Course Added successfully.", "success")
                        $("#Course_State").val("");
                        $("#Course_District").val("");
                        $("#Course_College").val("");
                        $("#Course_Course").val("");
                        $("#Course_CourseSection").val("");
                      /*  $("#Course_SubjectCombination").val("");*/
                        //getCourseSectionData();
                        window.location.href = '@Url.Action("ChoiceofCourses", "Account")';
                    }
                }
            });
        }
    });

    function getCourseSectionData() {
        $("#tblCourseSection tbody tr").remove();
        $.ajax({
              url: "@Url.Action("GetCourseSectionData", "Account")",
            type: 'POST',
            contentType: 'application/json;charset=utf-8',
            dataType: 'json',
            data: {},
            success: function (data) {

                if (data.isRedirect) {
                    window.location.href = data.redirectUrl;
                }
                else {
                    $.each(data, function (i, item) {

                        var srno = parseInt(i) + 1;
                        var rows = "<tr>"
                            + "<td>" + srno + "</td>"
                            + "<td>" + item.Course_District + "</td>"
                            + "<td>" + item.Course_College + "</td>"
                            + "<td>" + item.Course_Course + "</td>"
                            + "<td>" + item.Course_CourseSection + "</td>"
                            + "<td>" + "<a href='#' data-toggle='tooltip' class='btn btn-primary btn-sm c-shadow-1 btndelete' id='" + item.PId + "' onclick='DeleteCourse(this)' data-original-title='Delete'><i class='ti-delete f-left'></i>Delete</a>" + "</td>"
                            + "</tr>";
                        $('#tblCourseSection').append(rows);
                    });
                }
            },
            error: function () {
                alert('Process Failed! Please try again later.');
            },
        });


    }


    function CheckSubComMin() {

          $.ajax({

            url: "@Url.Action("CheckSubComMin", "Account")",
            type: 'POST',
            contentType: 'application/json;charset=utf-8',
            dataType: 'json',
            data: {},
              success: function (data) {

                  if (JSON.parse(data)[0].collegeandsection == '') {

                      if ($("#tblCourseSection > tbody").children().length == 0)
                        {
                         alert('Please add atleast one choice and then proceed');
                          return false;
                      }
                         window.location.href = '@Url.Action("lockPref", "Account")';
                  }
                  else {

                       var msg= JSON.parse(data)[0].collegeandsection.replace("$", "\n")
                      swal('Alert','Please select min  5 subject combinations for the following : \n '+ msg,'warning');
                  }
            },
            error: function () {
                alert('Process Failed! Please try again later.');
            },
        });
    }

    function DeleteCourse(idd) {
        if ('@Session["Verificationstatus"].ToString()' != "")
        {
            swal('Your form is locked. So you can not delete.');
            return false;
        }
        var idd = idd.id;
        var dataDeleteCourse = { 'id': idd };
        swal({
            title: "Are you sure?",
            text: "Do you want to delete this course.",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes, delete it!",
            closeOnConfirm: false,
            showLoaderOnConfirm: true,
        },
            function (isConfirm) {
                if (isConfirm) {
                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "@Url.Action("DeleteCourseDetails", "Account")",
                        data: JSON.stringify(dataDeleteCourse),
                        dataType: "json",
                        success: function (data) {
                        if (data != "Record Deleted Successfully") {
                        swal("Kindly try again, there is some error!!");
                        }
                        else {
                        swal("Deleted!", "This Record is Deleted Successfully.", "success");
                        //getCourseSectionData();
                        window.location.href = '@Url.Action("ChoiceofCourses", "Account")';

                        }
                        }
                        });
                        }
                        else {
                        swal("Cancelled", "Don't worry, Your record is safe.", "error");
                        }
                        });
                        }
                        function startPreloader() {
                        $(".loader").css("display", "block");
                        $(".outer-loader").css("display", "block");

                        }
                        function stopPreloader() {

                        $(".loader").css("display", "none");
                        $(".outer-loader").css("display", "none");
                        }
</script>
@if (Session["Verificationstatus"].ToString() != "" && Session["Verificationstatus"].ToString() != "R")
{
    <script>
        $('#home').removeClass('active');
        $('#home').addClass('disabledbutton');

    </script>
}

