@model HigherEducation.Models.FeeViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    Session["currentPage"] = 9;
}
@{
    if (Session["MaxPage"] == null)
    {
        Session["currentPage"] = 1;
        Session["MaxPage"] = 1;
    }
    else if (Convert.ToInt32(Session["currentPage"]) > Convert.ToInt32(Session["MaxPage"]))
    {
        Session["MaxPage"] = Session["currentPage"];
    }
}

@{
    Response.Cache.SetCacheability(HttpCacheability.NoCache);
    Response.Cache.SetExpires(DateTime.Now);
    Response.Buffer = true;

    Response.Expires = -1;
    Response.CacheControl = "no-cache";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Admission Fee</title>
    <link href="../assets/css/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/assets/css/style.css">
    <link rel="stylesheet" href="~/assets/css/stylepayment.css">
    <link href="~/swalJs/sweetalert.css" rel="stylesheet" />
    <link href="~/swalJs/swal-forms.css" rel="stylesheet" />
    <script src="~/assets/js/jquery-ui/jquery-ui.min.js"></script>

    <script src="~/Content/assets/js/libs/jquery/jspdf.js"></script>
    <script src="~/scripts/html2canvas.js"></script>
    <style>

        .loader,
        .outer-loader {
            display: inline-block;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0
        }

        .outer-loader {
            background: rgba(0, 0, 0, .3);
            width: 100%;
            height: 100%;
            z-index: 999
        }

        .loader {
            width: 69px;
            height: 89px;
            border: 1px solid #000;
            margin: auto
        }

        .loader-img {
            border: 15px solid #415bbb;
            border-radius: 50%;
            border-top: 15px solid #000;
            width: 80px;
            height: 80px;
            -webkit-animation: spin 1s linear infinite;
            animation: spin 1s linear infinite
        }

        @@-webkit-keyframes spin {
            0% {
                -webkit-transform: rotate(0)
            }

            100% {
                -webkit-transform: rotate(360deg)
            }
        }

        @@keyframes spin {
            0% {
                transform: rotate(0)
            }

            100% {
                transform: rotate(360deg)
            }
        }

        .row_new {
            margin-left: 10px;
            margin-right: 10px
        }

        #logo img {
            height: auto;
            padding-left: 3px;
            width: 40px
        }

        body:not(.menu-on-top).desktop-detected {
            min-height: 907px !important
        }

        .table td {
            padding: 0.35rem;
            white-space: normal;
            word-wrap: break-word;
        }

        .cus-modal .modal-dialog {
            max-width: 800px !important;
        }

        .modal-content .close {
            position: absolute;
            right: -15px;
            background: #E91E63;
            width: 40px;
            height: 40px;
            z-index: 999;
            border-radius: 50%;
            color: #fff;
            font-size: 30px;
            top: -25px;
            cursor: pointer;
        }

        .cus-background .card {
            box-shadow: none !important;
            -webkit-box-shadow: none !important;
            -moz-box-shadow: none !important;
        }

        .cus-inner-data label {
            font-weight: 700 !important;
        }
    </style>
</head>
<body>
    @if (Convert.ToInt32(Session["rankcard"]) > 0)
    {

        <div class="row" style="margin-top:40px;">
            <div class="col-md-12 form-group text-center">
                <a href="@Url.Action("Rankcard", "AdmissionFee")" target="_blank" class="btn btn-success">Generate Rank Card</a>
            </div>
        </div>

    }



    @if (Model.candidateSeatAllocated.Count > 099999)
    {
        <div class="row">
            <div class="col-md-12 form-group">
                <div class="row" style="margin-top:40px;">
                    <div class="col-md-12 form-group text-center">
                        <span style="font-size:16px;font-weight:bold;color:red" id="spnAllo"><b>Seat Allocated</b></span>
                    </div>
                </div>
                <div class="table-responsive">
                    <table class="table table-hover" id="tblfeedetail" style="box-shadow: 0px 0px 10px 0px #ccc;">
                        <thead>
                            <tr>
                                <th></th>
                                <th></th>
                                <th>Institute Name</th>
                                <th>Trade</th>
                                <th>Counselling Round</th>
                                <th>Verification Status</th>
                                <th>Download</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.candidateSeatAllocated)
                            {
                                <tr>
                                    <td> @Html.HiddenFor(m => item.A1_meritid, new { @Value = item.A1_meritid })</td>
                                    <td> @Html.HiddenFor(m => item.Al_RegistrationId, new { @Value = item.Al_RegistrationId })</td>
                                    <td> @Html.DisplayFor(m => item.Al_CollegeName, new { @class = "form-control" })</td>
                                    <td> @Html.DisplayFor(m => item.Al_Section, new { @class = "form-control" })</td>
                                    <td> @Html.DisplayFor(m => item.Al_Counselling, new { @class = "form-control" })</td>
                                    <td> @Html.DisplayFor(m => item.Al_VerificationStatus, new { @class = "form-control" })</td>
                                    <td><input type='submit' value='Download Provisional Seat Allotment Letter' class='btn btn-danger btn-sm btnSeatLetter'></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }

    @if (Model.candidateAdmissionStatuses.Count > 0)
    {

        <div class="row">
            <div class="col-md-12 form-group">
                <div class="row" style="margin-top:40px;">
                    <div class="col-md-12 form-group text-center">
                        <span style="font-size:16px;font-weight:bold;color:red" id="spnadmi"><b>ADMISSION STATUS </b></span>
                    </div>
                </div>
                <div class="table-responsive">
                    <table class="table table-hover" id="tblfeedetail" style="box-shadow: 0px 0px 10px 0px #ccc;">
                        <thead>
                            <tr>
                                <th></th>
                                <th></th>
                                <th>Institute Name</th>
                                <th>Trade</th>
                                <th>Status</th>
                                <th>Fee Receipt</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.candidateAdmissionStatuses)
                            {
                                <tr>
                                    <td> @Html.HiddenFor(m => item.C_RegistrationId, new { @Value = item.C_RegistrationId })</td>
                                    <td> @Html.HiddenFor(m => item.C_PaymentTransactionId, new { @Value = item.C_PaymentTransactionId })</td>
                                    <td> @Html.DisplayFor(m => item.C_CollegeName, new { @class = "form-control" })</td>
                                    <td> @Html.DisplayFor(m => item.C_SectionName, new { @class = "form-control" })</td>
                                    <td> @Html.DisplayFor(m => item.C_AdmissionStatus, new { @class = "form-control" })</td>
                                    @if (item.C_AdmissionStatus.ToUpper() == "SUCCESS" && item.C_PaymentTransactionId != "99")
                                    {
                                        <td><input type='button' value='Fee Receipt' class='btn btn-danger btn-sm btnFeeReceipt'></td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        if (Model.candidateAdmissionStatuses[0].C_AdmissionStatus.ToUpper() == "SUCCESSsss")
        {
            <div class="row" style="margin-bottom:37px;">
                <div class="col-md-12 form-group text-center">
                    <span style="font-size:16px;font-weight:bold;color:red">
                        @*Dear candidate you have been admitted in <mark>@Model.candidateAdmissionStatuses[0].C_SectionName</mark> trade of <mark>@Model.candidateAdmissionStatuses[0].C_CollegeName</mark> ITI, if you proceed, then your admission confirmed will be cancelled.*@
                        you have been admitted to <mark>@Model.candidateAdmissionStatuses[0].C_SectionName</mark> trade of <mark>@Model.candidateAdmissionStatuses[0].C_CollegeName</mark> ITI, if you want to participate in next counselling round than your admission to this seat wiil be cancelled & fee deposited wiil be forefiiited & will not be adjusted.
                    </span><br />
                </div>
            </div>

            <div id="dvConfirmSeat" style="display:none">
                <div class="row">
                    <div class="col-md-12 form-group text-center">
                        <input type="text" id="txtOtp" maxlength="4" onkeyup="javascript: return checknumbereonly(this);" placeholder="Please Enter OTP" /><br />
                        <span id="errormsg" style="color:red"></span><br />
                    </div>
                    <div class="col-md-12 form-group text-center">
                        <textarea id="txtReason" class="form-group" cols="100" rows="3" placeholder="Reason for Cancellation"></textarea>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 form-group text-center">
                        <input type="button" id="btnSubmitOtp" onclick="javascript:return CheckOtpFee();" class="btn btn-success" value="Confirm" />
                        <input type="button" id="btnResendOtp" onclick="javascript:return SendOTPFee();" style="display:none" class="btn btn-info" value="Resend OTP" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 form-group text-center">
                    <input type="button" value="Sent OTP to Proceed " style="margin-bottom:20px" id="btnconfirm" onclick="javascript:return SendOTPFee();" class="btn btn-danger" />
                </div>
            </div>
        }
    }

    @{
        if (Model.CandidateAllocatedCollege.Count > 0)
        {
            <div class="row" style="margin-top:5px;">
                <div class="col-md-12 form-group">
                    <div class="row" style="margin-top:37px;">
                        <div class="col-md-12 form-group text-center">
                            <span style="font-size:16px;font-weight:bold;color:red">If you have already paid fee and payment receipt is not generated, wait for 24 hours.<br>यदि आपने पहले ही शुल्क का भुगतान कर दिया है और भुगतान रसीद उत्पन्न नहीं हुई है, तो 24 घंटे तक प्रतीक्षा करें।</span><br />
                        </div>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-hover" id="tblfeedetail" style="box-shadow: 0px 0px 10px 0px #ccc;">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th></th>
                                    <th>Sr.</th>
                                    <th>College Name</th>
                                    <th>Course/Section</th>
                                    <th>Pay</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    int i = 1;
                                    foreach (var item in Model.CandidateAllocatedCollege)
                                    {
                                        <tr>
                                            <td> @Html.HiddenFor(m => item.A_Collegeid, new { @Value = item.A_Collegeid })</td>
                                            <td> @Html.HiddenFor(m => item.A_RegistrationId, new { @Value = item.A_RegistrationId })</td>
                                            <td><span>@i</span></td>
                                            <td> @Html.DisplayFor(m => item.A_CollegeName, new { @class = "form-control" })</td>
                                            <td> @Html.DisplayFor(m => item.A_Section, new { @class = "form-control" })</td>
                                            <td><input type='button' value='Pay' id='btngetdetail' class='btn btn-danger btn-sm detail'></td>
                                        </tr>
                                        i++;
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
    }

    <div class="modal cus-modal" tabindex="-1" id="FeeReceipt" data-keyboard="false" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <button type="button" class="close"
                        data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <!-- Modal body -->
                <div class="modal-body">

                </div>
            </div>
        </div>
    </div>
    <div id="Fee_content">
    </div>
    <div id="user_content">
    </div>
    <div id="dv_hide">
        <div id="seat_letter">
        </div>
    </div>


    <div class="outer-loader" style="display: none;">
        <div class="loader-img loader" style="display: none;"></div>
    </div>
</body>
</html>
<script>
    $(document).ready(function () {



        $('.btnSeatLetter').click(function () {
            $("#seat_letter").html("");
            startPreloader();
            var Merit_id = $(this).closest("tr").find("td").eq(0).find("input").val();
    $.ajax({
        url: '@Url.Action("SeatAllotmentLetter", "AdmissionFee")',
        data: { Meritid: Merit_id},
        type: 'POST',
        success: function (data) {
            $("#seat_letter").html(data);
           // console.log(data);
           // getPDF();
            stopPreloader();
        },
        failure: function (data) {
            alert('dfg');
        }
    });
});

        var MaxPages = '@Session["MaxPage"]';
        var currentPage = '@Session["currentPage"]';
        for (var i = 0; i < parseInt(MaxPages) ; i++) {
            if ((i+1) != currentPage) $("#tablist > li:eq(" + i + ")").addClass('done');
            else $("#tablist > li:eq(" + i + ")").addClass('current');
        }
        for (i = 9; i > MaxPages; i--) {
            $("#tablist > li:eq(" + (i - 1) + ")>a").attr("href", "#");
        }

            $(document).on('click', '.detail', function () {
                startPreloader();
                $('#Fee_content').empty();

                var college_id = $(this).closest("tr").find("td").eq(0).find("input").val();

                $.ajax({
                    type: "GET",
                    url: '@Url.Action("PartialFeeView", "AdmissionFee")',
				    data: { collegeid: college_id},

                    contentType: "application/json; charset=utf-8",
                    dataType: "html",
                    success: function (response) {
                        $('#Fee_content').append(response);
                        stopPreloader();
                    },
                    failure: function (response) {
                        alert(response.responseText);
                        stopPreloader();
                    },
                    error: function (response) {
                        alert(response.responseText);
                        stopPreloader();
                    }
                });
            });

             $(document).on('click', '.btnFeeReceipt', function () {
                startPreloader();
                 $('#user_content').empty();

                var paymentTransactionId = $(this).closest("tr").find("td").eq(1).find("input").val();
                             $.ajax({
                    type: "GET",
                                 url:'@Url.Action("FeeReceipt", "AdmissionFee")',

                    data: { paymentTransactionId: paymentTransactionId },

                    contentType: "application/json; charset=utf-8",
                    dataType: "html",
                    success: function (response) {
                        $('#user_content').append(response);
                        $('.abc').hide();
                        //$("#FeeReceipt").modal();
                        //$('#FeeReceipt').modal({ backdrop: 'static', keyboard: false });
                        stopPreloader();
                    },
                    failure: function (response) {
                        alert(response.responseText);
                        stopPreloader();
                    },
                    error: function (response) {
                        alert(response.responseText);
                        stopPreloader();
                    }
                });



            });

        });
    function getPDF() {

        var HTML_Width = "100%";
        var HTML_Height = "100%";
        var top_left_margin = 15;
        var PDF_Width = HTML_Width + (top_left_margin * 2);
        var PDF_Height = (PDF_Width * 1.5) + (top_left_margin * 2);
        var canvas_image_width = HTML_Width;
        var canvas_image_height = HTML_Height;

        var totalPDFPages = Math.ceil(HTML_Height / PDF_Height) - 1;


        html2canvas($(".canvas_div_pdf")[0], { allowTaint: true }).then(function (canvas) {
            canvas.getContext('2d');

            console.log(canvas.height + "  " + canvas.width);


            var imgData = canvas.toDataURL("image/jpeg", 1.0);
            var pdf = new jsPDF('p', 'pt', [PDF_Width, PDF_Height]);
            pdf.addImage(imgData, 'JPG', top_left_margin, top_left_margin, canvas_image_width, canvas_image_height);
            //pdf.text(50, 50, 'Hello World');
            for (var i = 1; i <= totalPDFPages; i++) {
                pdf.addPage(PDF_Width, PDF_Height);
                pdf.addImage(imgData, 'JPG', top_left_margin, -(PDF_Height * i) + (top_left_margin * 4), canvas_image_width, canvas_image_height);
            }
            pdf.save("Provisional Seat Allotment Letter.pdf");
            $("#seat_letter").hide();
        });
    };
</script>
<script>
    function startPreloader() {
        $(".loader").css("display", "block");
        $(".outer-loader").css("display", "block");

    }
    function stopPreloader() {

        $(".loader").css("display", "none");
        $(".outer-loader").css("display", "none");
    }

    function SendOTPFee() {


        startPreloader();
                  $('#errormsg').fadeIn();
                  $('#errormsg').text('');
           $.ajax({
               type: "POST",
               url: '@Url.Action("SendOTPConfirmSeat", "Account")',
               data: "{}",
               contentType: "application/json; charset=utf-8",
               dataType: "json",
               success: function (data) {
                 stopPreloader();

                   if (data == "1") {
                       $('#dvConfirmSeat').show();
                       $('#btnconfirm').hide();
                       $('#btnResendOtp').show();
                       $('#errormsg').text('OTP has been sent to your registered mobile no and email id');
                   }
                   else {
                       swal("Alert!","Some issue to send OTP","warning");
                   }
               },
               failure: function (data) {
                 stopPreloader();

                   swal('Error', 'Something went wrong', 'error');
               }

           });
    };

     function CheckOtpFee() {
         if ($('#txtReason').val() == "") {
             swal("Alert!", "Cancellation Reason required", "warning");
             return false;
         }
         var MobileOtp = $('#txtOtp').val();
         $('#errormsg').fadeIn();

        if (MobileOtp == "") {
              $('#errormsg').text('Please Enter OTP..!');
               $('#errormsg').delay(2000).fadeOut();
            return;
        }
        startPreloader();

            $.ajax({
                  type: "POST",
                  url: '@Url.Action("CheckOTPFee", "Account")',
                  data: "{OTP:" + MobileOtp + "}",
                  contentType: "application/json; charset=utf-8",
                  dataType: "json",
                  success: function (data) {
                 stopPreloader();
                      if (data == "0") {

                          $('#errormsg').text('Invalid OTP..!');
                          $('#errormsg').delay(3000).fadeOut();
                          return;
                      }
                      else if (data == "1") {
                         // alert("success");
                          CancelAdmission();
                      }

                  },
                failure: function (data) {
                 stopPreloader();

                    swal('Error', 'Something went wrong', 'error');
                }

            });
    }

    function CancelAdmission() {
        if ($('#txtReason').val() == "") {
            swal("Alert!", "Cancellation Reason required", "warning");
            return false;
        }
        var Reason = $('#txtReason').val();

        startPreloader();

          $.ajax({
                  type: "POST",
                  url: '@Url.Action("CancelAdmissionITI", "Account")',
              data: "{Reason:" + JSON.stringify(Reason) + "}",
                  contentType: "application/json; charset=utf-8",
                  dataType: "json",
                  success: function (data) {
                      if (data == "1") {
                          UnlockmsgFee();
                      }
                      if (data == "999") {
                          swal("Alert!", "Cancellation Reason required", "warning");
                      }
                     stopPreloader();

                  },
                failure: function (data) {
                    swal('Error', 'Something went wrong', 'error');
                     stopPreloader();

                }
          });
    }
          function UnlockmsgFee() {
                    swal({
            title: "Success",
            text: "Your admission stands cancelled. You can now made changes in your form. Please final submit your form after the changes.",
            type: "success",
            showCancelButton: false,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Ok",
            closeOnConfirm: false
                    },
              function (isConfirm) {
                if (isConfirm) {
                   window.location.href = "@Url.Action("AdmissionFee", "AdmissionFee")";
                }
                else {

                }
            });
        }
</script>